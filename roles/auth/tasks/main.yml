---

- name: define _groups
  set_fact:
    _groups: 
      - { group: '' }

- name: add groups
  set_fact: 
    _groups: 
      - "{{(_groups+lookup('vars',item))|flatten|unique}}"
  with_items: "{{ lookup('varnames', '.+_groups$').split(',') }}"

- debug:
    var: _groups

- name: show groups and gid
  debug:
    msg: "GROUP={{item.group}} GID={{item.gid}}"
  with_items: "{{_groups}}"
  when: item.group != ""

- name: create groups
  group:
    name: "{{item.group}}"
    state: present
    gid: "{{item.gid}}"
  become: true
  with_items: "{{_groups}}"
  when: item.group != ""

- name: define _users
  set_fact:
    _users: 
      - { user: '' }

- name: Find several related variables that end specific way
  debug: msg="ITEM={{item}}+>{{ lookup('vars',item)}}"
  with_items: "{{ lookup('varnames', '.+_users$').split(',') }}"
  
- name: add users
  set_fact: 
    _users: 
      - "{{(_users+lookup('vars',item))|flatten|unique}}"
  with_items: "{{ lookup('varnames', '.+_users$').split(',') }}"

- name: show users and uid
  debug:
    msg: "USER={{item.user}} COMMENT={{item.comment}} UID={{item.uid}} GROUPS={{item.groups}} CREATE_HOME={{item.create_home|default('yes')}} SHELL={{item.shell|default('/bin/bash')}}"
  with_items: "{{_users}}"
  when: item.user != ""

- name: create users
  user:
    name: "{{item.user}}"
    comment: "{{item.comment}}"
    uid: "{{item.uid}}"
    groups: "{{item.groups}}"
    create_home: "{{item.create_home|default('yes')}}"
    shell: "{{item.shell|default('/bin/bash')}}"
  become: true
  with_items: "{{_users}}"
  when: item.user != ""
