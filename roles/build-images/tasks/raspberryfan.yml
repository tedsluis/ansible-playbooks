---

- name: set external and internal
  set_fact:
    _internal: "{{_image_registry_url}}{{outer_item.image}}-{{outer_item.arch}}"
    _external: "{{outer_item.ext}}{{outer_item.image}}"
    _arch: "{{outer_item.arch}}"

- debug:
    msg: "INTERNAL={{_internal}}, EXTERNAL={{_external}}, ARCH={{_arch}}"

- name: "create raspberryfan directory"
  file:
    path: "{{item.directory}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
    state: directory
  become: true
  with_items:
    - { directory: "/var/lib/build-images/raspberryfan",owner: "root" ,group: "root" ,mode: "0777" }

- name: "pull {{_image_registry_url}}{{hostvars[groups['raspberryfan'][0]]['_fedora_image']['image']}}-{{_arch}}"
  shell: |
    podman pull --arch {{_arch}} --creds "registry:{{hostvars[groups['registry'][0]]['_registry_password']}}" {{_image_registry_url}}{{hostvars[groups['raspberryfan'][0]]['_fedora_image']['image']}}-{{_arch}}
  become: true

- name: "copy files to /var/lib/build-images/raspberryfan/ for podman build"
  template:
    src: "raspberryfan/Dockerfile.j2"
    dest: "/var/lib/build-images/raspberryfan/Dockerfile"
    owner: root
    group: root
    mode: 0664
  become: true

- name: "create /var/lib/build-images/raspberryfan/fan.py"
  copy:
    src: raspberryfan/fan.py
    dest: /var/lib/build-images/raspberryfan/fan.py
    owner: root
    group: root
    mode: 0777
  become: true

- name: "build raspberryfan image {{_internal}}"
  shell: |
    cd /var/lib/build-images/raspberryfan
    podman build --arch {{_arch}} -t {{_internal}} -f /var/lib/build-images/raspberryfan/Dockerfile
  become: true
  register: _build
  failed_when: false

- debug:
    var: _build.stdout

- name: "tag {{_internal}} {{_external}}"
  shell: |
    podman tag {{_internal}} {{_external}}
  become: true

- name: "push image to {{_external}} and {{_internal}}"
  shell: |
    podman login -u registry -p "{{hostvars[groups['registry'][0]]['_registry_password']}}" "{{_image_registry_url}}"
    podman push {{_internal}}
    podman login -u "{{_dockerio_username}}" -p "{{_dockerio_token}}" "{{_dockerio_url}}"
    podman push {{_external}}
  become: true

- name: "get image info after build"
  shell: |
    podman images --format "{{ '{{' }}.ID{{ '}}' }} {{ '{{' }}.Repository{{ '}}' }} {{ '{{' }}.Tag{{ '}}' }}  {{ '{{' }}.Digest{{ '}}' }}" | grep raspberryfan
  become: true
  register: _raspberryfan_image

- debug:
    var: _raspberryfan_image.stdout

- name: clean up build directory
  file: 
    path: /var/lib/build-images/raspberryfan
    state: absent
  become: true
