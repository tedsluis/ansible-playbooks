global
  daemon
  maxconn 50000
  stats socket /var/lib/haproxy/haproxy.sock mode 0600 level admin
  log 127.0.0.1:514 local0 debug
  log-send-hostname
  ssl-server-verify none
  ssl-dh-param-file /etc/haproxy/dhparams.pem

defaults
  log global
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms

listen stats
  bind {{inventory_hostname}}:9000 ssl crt /etc/haproxy/haproxy.pem
  mode http
  stats enable
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth haproxy:{{_haproxy_password}}

frontend {{_keepalived_vip1_name}}
  option httplog
  bind {{ _keepalived_vip1_ip }}:8443 ssl crt /etc/haproxy/haproxy.pem ca-file /etc/ssl/certs/ca-bundle.trust.crt verify required
  mode http
  maxconn 30000
  #tcp-request connection reject if ! { src -f /etc/haproxy/whitelist.lst }
  {% raw %}log-format '%ci:%cp [%t] %ft %b/%s %Tq/%Tw/%Tc/%Tr/%Tt %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs {%[ssl_c_verify],%{+Q}[ssl_c_s_dn],%{+Q}[ssl_c_i_dn]} %{+Q}r'
{% endraw %}
  http-request set-header X-SSL                  %[ssl_fc]
  http-request set-header X-SSL-Client-Verify    %[ssl_c_verify]
  http-request set-header X-SSL-Client-DN        %{+Q}[ssl_c_s_dn]
  http-request set-header X-SSL-Client-CN        %{+Q}[ssl_c_s_dn(cn)]
  http-request set-header X-SSL-Issuer           %{+Q}[ssl_c_i_dn]
  http-request set-header X-SSL-Client-NotBefore %{+Q}[ssl_c_notbefore]
  http-request set-header X-SSL-Client-NotAfter  %{+Q}[ssl_c_notafter]
  use_backend piaware1 if { path_beg / }

frontend {{_keepalived_vip2_name}}-linkding
  option httplog
  bind {{ _keepalived_vip2_ip }}:9443 ssl crt /etc/haproxy/haproxy.pem
  mode http
  maxconn 30000
  #tcp-request connection reject if ! { src -f /etc/haproxy/whitelist.lst }
  use_backend linkding if { path_beg / }

frontend {{_keepalived_vip2_name}}-piaware
  option httplog
  bind {{ _keepalived_vip2_ip }}:8443 ssl crt /etc/haproxy/haproxy.pem
  mode http
  maxconn 30000
  #tcp-request connection reject if ! { src -f /etc/haproxy/whitelist.lst }
  use_backend piaware1 if { path_beg / }

frontend {{_keepalived_vip2_name}}-grafana
  option httplog
  bind {{ _keepalived_vip2_ip }}:3000 ssl crt /etc/haproxy/haproxy.pem
  mode http
  maxconn 30000
  #tcp-request connection reject if ! { src -f /etc/haproxy/whitelist.lst }
  use_backend grafana if { path_beg / }


{% for _backend in _backends %}
backend {{ _backend.name }}
  mode http
{% if _backend.options is defined  %}
{% for _option in _backend.options %}
  {{ _option }}
{% endfor %}
{% endif %}
  server {{ _backend.host }} {{ _backend.uri }}:{{ _backend.port }} check ssl

{% endfor %}
