---

- name: create httpd directories
  file:
    path: "{{item.directory}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
    state: directory
  become: true
  with_items:
    - { directory: "/var/lib/httpd",           owner: "httpd",group: "httpd",mode: "0775" }
    - { directory: "/var/lib/httpd/conf",      owner: "httpd",group: "httpd",mode: "0775" }
    - { directory: "/var/lib/httpd/www",       owner: "httpd",group: "httpd",mode: "0775" }
    - { directory: "/var/lib/httpd/logs",      owner: "httpd",group: "httpd",mode: "0775" }
    - { directory: "/var/lib/httpd/www/health",owner: "httpd",group: "httpd",mode: "0775" }

- name: copy httpd.conf
  template:
    src: httpd.conf.j2
    dest: /var/lib/httpd/conf/httpd.conf
    owner: httpd
    group: httpd
    mode: 0664
  become: true
  notify: _restart_httpd

- name: create index.html
  copy:
    content: '<!DOCTYPE html><html>agent installed...</html>'
    dest: /var/lib/httpd/www/index.html
    owner: httpd
    group: httpd
    mode: 0664
  become: true
  
- name: create health check
  copy:
    src: index.html
    dest: /var/lib/httpd/www/health/index.html
    owner: httpd
    group: httpd
    mode: 0664
  become: true

- name: "pull docker.io/httpd:{{_httpd_image_tag}} image"
  shell: |
    podman pull docker.io/httpd:{{_httpd_image_tag}}
  register: _image_pull
  become: true

- debug:
    var: _image_pull

- name: create /etc/systemd/system/httpd.service
  template:
    src: httpd.service.j2
    dest: /etc/systemd/system/httpd.service
    owner: root
    group: root
    mode: 0664
  become: true
  with_items: "{{_httpd_users}}"
  notify: _restart_httpd

- name: start and enable httpd.service
  systemd:
    name: httpd
    state: started
    enabled: true
  become: true
  
- name: httpd podman container httpd state
  shell: |
    podman ps -a --format "{{ '{{' }}.Status{{ '}}' }}  {{ '{{' }}.Names{{ '}}' }}  {{ '{{' }}.ID{{ '}}' }}" --filter 'name=httpd'
  register: _container_state
  become: true

- debug:
    var: _container_state

- name: trigger handelers
  meta: flush_handlers


