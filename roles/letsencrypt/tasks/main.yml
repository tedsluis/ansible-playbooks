---

- name: create letsencrypt directories
  file:
    path: "{{item.directory}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
    state: directory
  become: true
  with_items:
    - { directory: "/var/lib/letsencrypt",owner: "letsencrypt",group: "letsencrypt",mode: "0664" }

- include_role:
    name: pull-images
  vars:
    _images:
      - _swag_image

- name: create /etc/systemd/system/letsencrypt-swag.service
  template:
    src: letsencrypt-swag.service.j2
    dest: /etc/systemd/system/letsencrypt-swag.service
    owner: root
    group: root
    mode: 0664
  register: _service
  become: true
  with_items: "{{_letsencrypt_users}}"
  notify: _restart_letsencrypt_swag

- name: start and enable letsencrypt-swag.service
  systemd:
    name: letsencrypt-swag
    state: started
    enabled: true
  become: true

- name: letsencrypt-swag container state
  shell: |
    podman ps -a --format "{{ '{{' }}.Status{{ '}}' }}  {{ '{{' }}.Names{{ '}}' }}  {{ '{{' }}.ID{{ '}}' }}" --filter 'name=letsencrypt-swag'
  register: _container_state
  become: true

- debug:
    var: _container_state

- name: trigger handelers
  meta: flush_handlers

- name: show certificate expire in seconds
  shell: |
    echo $(( $(podman exec -it letsencrypt-swag openssl x509 -in /config/keys/letsencrypt/fullchain.pem -noout -dates | grep notAfter | sed 's/notAfter=//' | xargs -I {} date -d '{}' +"%s") - $(date +%s) ))
  become: true
  register: _certificate_expire_time

- debug:
    msg: "_certificate_expire_time:{{_certificate_expire_time.stdout}}"

- name: restart when expire in less than 30 days
  ansible.builtin.service:
    name: letsencrypt-swag.service
    state: restarted
  become: true
  when: ( _certificate_expire_time.stdout | int < 2592000 )
    


