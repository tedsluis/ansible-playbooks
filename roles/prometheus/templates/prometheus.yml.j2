# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s)..

# Alertmanager configuration..
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - {{hostvars[groups['alertmanager'][0]]['_alertmanager_fqdn']}}:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - /etc/prometheus/rules/*.yml
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']

  - job_name: node_exporters_https
    scheme: https
    basic_auth:
      username: prometheus
      password: "{{ _node_exporter_auth_pass }}"
    tls_config:
      ca_file: /etc/ssl/certs/ca-certificates.crt
      insecure_skip_verify: true
    file_sd_configs:
      - files:
        - /etc/prometheus/targets/*.yml

  - job_name: node_exporters_postgres
    file_sd_configs:
      - files:
        - /etc/prometheus/targetsPostgres/*.yml

  - job_name: 'blackbox-200'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
{% for target in hostvars[groups['blackbox'][0]]['_blackbox_http_2xx_targets'] %}
        - "{{ target }}"
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{hostvars[groups['blackbox'][0]]['_blackbox_fqdn']}}:9115

  - job_name: 'blackbox-200-auth'
    metrics_path: /probe
    params:
      module: [http_2xx_auth]
    static_configs:
      - targets:
{% for target in hostvars[groups['blackbox'][0]]['_blackbox_http_2xx_auth_targets'] %}
        - "{{ target }}"
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{hostvars[groups['blackbox'][0]]['_blackbox_fqdn']}}:9115

  - job_name: 'blackbox-nodeexporter-200'
    metrics_path: /probe
    params:
      module: [http_nodeexporter_2xx]
    static_configs:
      - targets:
{% for target in hostvars[groups['blackbox'][0]]['_blackbox_http_nodeexporter_2xx_targets'] %}
        - "{{ target }}"
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{hostvars[groups['blackbox'][0]]['_blackbox_fqdn']}}:9115

  - job_name: 'blackbox-nodeexporter-dns_test'
    metrics_path: /probe
    params:
      module: [dns_test]
    static_configs:
      - targets:
{% for target in hostvars[groups['blackbox'][0]]['_blackbox_dns_targets'] %}
        - "{{ target }}"
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{hostvars[groups['blackbox'][0]]['_blackbox_fqdn']}}:9115

  - job_name: 'tower'
    tls_config:
        insecure_skip_verify: True
    metrics_path: /api/v2/metrics
    scrape_interval: 10s
    scheme: https
    basic_auth:
        username: admin
        password: {{_admin_password}}
    static_configs:
        - targets:
            - {{hostvars[groups['awx'][0]]['_awx_fqdn']}}

  - job_name: 'snmp'
    static_configs:
      - targets: 
{% for target in hostvars[groups['snmpexporter'][0]]['_snmpexporter_targets'] %}
        - "{{ target }}"
{% endfor %}
    metrics_path: /snmp
    params:
      module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{hostvars[groups['snmpexporter'][0]]['_snmpexporter_fqdn']}}:9116  

  - job_name: 'karma'
    #tls_config:
    #    insecure_skip_verify: True
    metrics_path: /metrics
    scrape_interval: 10s
    scheme: http
    #basic_auth:
    #    username: admin
    #    password: {{_admin_password}}
    static_configs:
        - targets:
            - {{hostvars[groups['karma'][0]]['_karma_fqdn']}}:8080

  - job_name: 'dump1090exporter'
    scrape_interval: 5s
    static_configs:
      - targets: 
{% for target in hostvars[groups['piaware'][0]]['_dump1090exporter_targets'] %}
        - "{{ target }}"
{% endfor %}

  - job_name: 'openvpnexporter'
    scrape_interval: 10s
    static_configs:
      - targets: 
{% for target in hostvars[groups['openvpn'][0]]['_openvpnexporter_targets'] %}
        - "{{ target }}"
{% endfor %}


