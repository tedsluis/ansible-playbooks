---

- name: check for mongo image
  shell: |
    podman images | grep {{ mongo_image_name }} 
  become: true
  register: mongo_image

- debug:
    msg: "existing mongo images: '{{ mongo_image.stdout }}', mongo image name: '{{ mongo_image_name }}', mongo image version: '{{ mongo_image_version }}'"

- name: build mongo image when mongo image not exists
  when: mongo_image.stdout is not search( "{{ mongo_image_name }}" ) or mongo_image.stdout is not search( "{{ mongo_image_version }}" ) 
  block:

    - name: create temporery mongo directory
      file: 
        path: /tmp/mongo
        state: directory
        owner: root
        group: root
        mode: 775
      become: true
    
    - name: clone repo https://github.com/lowdef/rpi3-mongodb3.2.git
      git:
        repo: https://github.com/lowdef/rpi3-mongodb3.2.git
        dest: /tmp/mongo
        force: yes
      become: true
    
    - name: pull resin/rpi-raspbian:jessie base image 
      shell: |
        podman pull resin/rpi-raspbian:jessie
      become: true
    
    - name: create swap space
      shell: |
        dd if=/dev/zero of=/mytempswapfile bs=1024 count=524288
        chmod 0600 /mytempswapfile
        mkswap /mytempswapfile
        swapon /mytempswapfile
      become: true
      ignore_errors: True
    
    - name: "build mongo {{ mongo_image_name }}:{{ mongo_image_version }} image for raspberry 32bit arm v7"
      shell: |
        cd /tmp/mongo
        podman build --format=docker -t {{ mongo_image_name }}:{{ mongo_image_version | default('latest') }} -f /tmp/mongo/Dockerfile . |  tee /tmp/{{ mongo_image_name }}{{ mongo_image_version | default('latest') }}-build.log
      become: true
      ignore_errors: True
    
    - name: remove swap space and clone directory
      shell: |
        swapoff -v /mytempswapfile
        rm -f /mytempswapfile
        rm -rf /tmp/mongo
      become: true
      ignore_errors: True
    
    - name: "ls image {{ mongo_image_name }}:{{ mongo_image_version }}"
      shell: |
        podman images | grep {{ mongo_image_name }} | grep {{ mongo_image_version }}
      become: true
      register: ls_image
    
    - debug:
        msg: "ls image: {{ ls_image.stdout }}"
    
    - name: "inspect mongo image {{ mongo_image_name }}:{{ mongo_image_version }}"
      shell: |
        podman inspect $(podman images | grep {{ mongo_image_name }} | grep {{ mongo_image_version }} | awk '{print $3}')
      become: true
      register: inspect_image
    
    - debug:
        msg: "inspect image: {{ inspect_image.stdout }}"

    - name: "include ansible vault secrets to login to docker.io."
      include_vars: group_vars/vault.yaml
    
    - name: "login docker.io, user {{ dockerio_username }}"
      shell: |
        podman login docker.io --username {{ dockerio_username }} --password {{ dockerio_token }}
      become: true
    
    - name: "push {{ mongo_image_repo }}/{{ mongo_image_name }}:{{ mongo_image_version }} to docker.io"
      shell: |
        podman tag $(podman images | grep {{ mongo_image_name }} | grep {{ mongo_image_version }} | awk '{print $3}') {{ mongo_image_repo }}/{{ mongo_image_name }}:{{ mongo_image_version }}
        podman push {{ mongo_image_repo }}/{{ mongo_image_name }}:{{ mongo_image_version }}
      become: true
    
